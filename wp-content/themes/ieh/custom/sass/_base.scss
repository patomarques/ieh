body,
html{
  height: 100%;
  background-color: $branco;
}

body{
  &::-webkit-scrollbar
  {
    width: 10px;  /* for vertical scrollbars */
    height: 12px; /* for horizontal scrollbars */
  }

  &::-webkit-scrollbar-track
  {
    background: rgba(0, 0, 0, 0.1);
  }

  &::-webkit-scrollbar-thumb
  {
    background: rgba(0, 0, 0, 0.5);
  }
}


a{
  &:hover{
    text-decoration: none !important;
    opacity: 0.7;
  }
}
.bg-home-parallax {
  /* The image used */
  background-image: url("../img/bg/home-fullscreen-bg.jpg");

  /* Set a specific height */
  width: 100%;
  height: 100%;

  /* Create the parallax scrolling effect */
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

#home-o-que-fazemos{
  //imagem
}

.little-ball{
  position: absolute;
  margin: 2px;
  display: inline-block;
  font-size: 12px;


}

.text-uppercase{
  text-transform: uppercase !important;
}

.text-content{
  font-family: $ff-montserrat;
  font-size: 28px;
}

.transition{
  transition: all 0.5s ease;
}

.item{
  //background-image: url('https://images.unsplash.com/photo-1484256017452-47f3e80eae7c?dpr=1&auto=format&fit=crop&w=2850&q=60&cs=tinysrgb');
  //background-size: cover;
  //background-position: center center;
  background-color: whitesmoke;
  @include box-shadow(1px, 4px, 10px, 2px, $cinza-line);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  @extend .transition;

  &:hover{
    opacity: 0.5;
  }

  .square-content{
    align-items: center;
    padding: 20px;

    .img-icon{
      display: block;
      margin: 0 auto 25px;
      text-align: center;
    }

    .text-box{
      display: block;
      text-transform: uppercase;
      font-weight: 700;
      font-family: $ff-montserrat;
      color: $azul-claro;
      text-align: center;
      line-height: 20px;
      font-size: 14px;
    }
  }
}

.square-grid{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 50px;
}
SquareGrid{
  // The content width you use on your website
  --content-width: 65vw;

  // The size of the gutter
  --gutter: 40px;

  // The amount of columns
  --columns: 1;


  // This is the calculation for the row height.
  --row-size: calc(
          ( var(--content-width) - (var(--gutter) * (var(--columns) - 1))
          ) / var(--columns)
  );

  display: grid;

  width: 100%;
  max-width: var(--content-width);

  grid-template-columns: repeat(var(--columns), 1fr);
  grid-auto-rows: var(--row-size);

  grid-column-gap: var(--gutter);
  grid-row-gap: var(--gutter);
}


// This is again demo. Just decide with media queries when to add another column

@media (min-width: 450px){
  SquareGrid{
    --columns: 2;
  }
}

@media (min-width: 750px){
  SquareGrid{
    --columns: 3;
  }
}

@media (min-width: 1200px){
  SquareGrid{
    --columns: 4;
  }
}